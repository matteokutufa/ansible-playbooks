# OpenSSL configuration for {{ ca_name }} certificate authority
# Automatically generated by Ansible from openssl.cnf.j2 template


[ ca ]
default_ca = {{ ca_name }}

[ {{ ca_name }} ]
dir               = {{ ca_base_dir }}
certs             = {{ ca_certs_dir }}
crl_dir           = {{ ca_crl_dir }}
database          = {{ ca_index_file }}
new_certs_dir     = {{ ca_newcerts_dir }}
certificate       = {{ ca_certificate }}
serial            = {{ ca_serial_file }}
crlnumber         = $dir/crlnumber
crl               = $crl_dir/crl.pem
private_key       = {{ ca_private_key }}
default_md        = sha256
default_days      = {{ cert_validity_days }}
default_crl_days  = 30
copy_extensions   = copy
policy            = policy_standard
RANDFILE          = {{ ca_private_dir }}/.rand

[ policy_standard ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits        = {{ ca_key_size }}
string_mask         = utf8only
distinguished_name  = req_distinguished_name
attributes          = req_attributes
x509_extensions     = v3_ca
req_extensions      = v3_req

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = {{ ca_country }}
countryName_min                 = 2
countryName_max                 = 2
stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = {{ ca_state }}
localityName                    = Locality Name (eg, city)
localityName_default            = {{ ca_city }}
organizationName                = Organization Name (eg, company)
organizationName_default        = {{ ca_organization }}
organizationalUnitName          = Organizational Unit Name (eg, section)
organizationalUnitName_default  = {{ ca_organizational_unit }}
commonName                      = Common Name (e.g. server FQDN or YOUR name)
commonName_max                  = 64
emailAddress                    = Email Address
emailAddress_default            = {{ ca_email }}
emailAddress_max                = 64

[ req_attributes ]
challengePassword               = A challenge password
challengePassword_min           = 4
challengePassword_max           = 20
unstructuredName                = An optional company name

[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer
basicConstraints = critical,CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ server_cert ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Server certificate generated by {{ ca_name }}"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ server_cert_san ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Server certificate w/SAN generated by {{ ca_name }}"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[ client_cert ]
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "Client certificate generated by {{ ca_name }}"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ client_cert_san ]
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "Client certificate w/SAN generated by {{ ca_name }}"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
subjectAltName = @alt_names

[ wildcard_cert ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Wildcard certificate generated by {{ ca_name }}"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[ crl_ext ]
authorityKeyIdentifier=keyid:always

[ alt_names ]
# I SAN verranno aggiunti dinamicamente durante la generazione