---
# tasks file for mitocode-hosting

- name: "Recupera versione PHP"
  ansible.builtin.shell: php -r "echo PHP_VERSION;"
  register: php_version_output
  changed_when: false

- name: "Registra variabili PHP"
  ansible.builtin.set_fact:
    php_version: "{{ php_version_output.stdout }}"
    php_major_minor: "{{ php_version_output.stdout | regex_replace('^([0-9]+\\.[0-9]+).*', '\\1') }}"
    php_major: "{{ php_version_output.stdout.split('.')[0] }}"
    php_minor: "{{ php_version_output.stdout.split('.')[1] }}"

- name: Install required packages
  ansible.builtin.package:
    name:
      - acl
      - net-tools
    state: present
    update_cache: true

- name: Uninstall Apache2 if installed
  ansible.builtin.package:
    name: apache2
    state: absent
    autoremove: true
    autoclean: true
  when: ansible_facts.packages.apache2 is defined

- name: Deploy optimized limits.conf configuration
  ansible.builtin.copy:
    src: limits.conf
    dest: /etc/security/limits.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Deploy optimized MariaDB configuration
  ansible.builtin.copy:
    src: 50-server.cnf
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify:
    - Restart mariadb service

- name: Deploy optimized Nginx configuration
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Deploy optimized php.ini configuration
  ansible.builtin.copy:
    src: php.ini
    dest: /etc/php/{{ php_major_minor }}/fpm/php.ini
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Deploy optimized php-fpm.conf configuration
  ansible.builtin.copy:
    src: php-fpm.conf
    dest: /etc/php/{{ php_major_minor }}/fpm/php-fpm.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Create hosting group
  ansible.builtin.group:
    name: "{{ hosting_user.group }}"
    gid: "{{ hosting_user.gid }}"
    state: present

- name: Create hosting user
  ansible.builtin.user:
    name: "{{ hosting_user.name }}"
    uid: "{{ hosting_user.uid }}"
    group: "{{ hosting_user.group }}"
    home: "{{ hosting_user.home }}"
    system: true
    shell: /usr/sbin/nologin
    create_home: false
    state: present

- name: Create hosting directories structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ hosting_user.name }}"
    group: "{{ hosting_user.group }}"
    mode: '0755'
  loop:
    - "{{ hosting_folders.logs }}"
    - "{{ hosting_folders.config }}"
    - "{{ hosting_folders.config_nginx }}"
    - "{{ hosting_folders.config_php }}"
    - "{{ hosting_folders.sites }}"

- name: Inject custom Nginx virtual host configuration folder into nginx.conf
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: "include /etc/nginx/sites-enabled/*;"
    line: "\tinclude {{ hosting_folders.config_nginx }}/*.conf;"
    create: true
    state: present
    mode: '0644'
    owner: root
    group: root
    backup: true
  notify:
    - Restart nginx service

- name: Inject custom PHP-FPM pool configuration folder into php-fpm.conf
  ansible.builtin.lineinfile:
    path: /etc/php/{{ php_major_minor }}/fpm/php-fpm.conf
    insertafter: "include=/etc/php/8.3/fpm/pool.d/*.conf"
    line: "include={{ hosting_folders.config_php }}/*.conf"
    create: true
    state: present
    mode: '0644'
    owner: root
    group: root
    backup: true
  notify:
    - Restart php-fpm service
